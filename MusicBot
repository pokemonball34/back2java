public class MusicBot extends ListenerAdapter 
{
    public static void main(String[] args)
    throws IllegalArgumentException, LoginException, RateLimitedException
    {
        new JDABuilder(AccountType.BOT)
            .setToken(args[0]) // Use token provided as JVM argument
            .addEventListener(new MusicBot()) // Register new MusicBot instance as EventListener
            .buildAsync(); // Build JDA - connect to discord
    }

    // Note that we are using GuildMessageReceivedEvent to only include messages from a Guild!
    @Override
    public void onGuildMessageReceived(GuildMessageReceivedEvent event) 
    {
        // This makes sure we only execute our code when someone sends a message with "!play"
        if (!event.getMessage().getRawContent().startsWith("!play")) return;
        // Now we want to exclude messages from bots since we want to avoid command loops in chat!
        // this will include own messages as well for bot accounts
        // if this is not a bot make sure to check if this message is sent by yourself!
        if (event.getAuthor().isBot()) return;
        Guild guild = event.getGuild();
        // This will get the first voice channel with the name "music"
        // matching by voiceChannel.getName().equalsIgnoreCase("music")
        VoiceChannel channel = guild.getVoiceChannelsByName("music", true).get(0);
        AudioManager manager = guild.getAudioManager();

        // MySendHandler should be your AudioSendHandler implementation
        manager.setSendingHandler(new MySendHandler());
        // Here we finally connect to the target voice channel 
        // and it will automatically start pulling the audio from the MySendHandler instance
        manager.openAudioConnection(channel);
    }
}
